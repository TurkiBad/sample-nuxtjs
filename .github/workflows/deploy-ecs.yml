name: ECS Deployment
on:
    push:
        branches:
            - main


permissions:
  id-token: write
  contents: read

jobs:
  Deploy:
    name : Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Cheackout
        uses: actions/checkout@v4

            

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ECS}}
          aws-region: ${{ secrets.AWS_REGION }}


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
  
      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: laravel-app
            IMAGE_TAG: ${{ github.sha }}
        run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
            echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT


      - name: Download task def
        run: |
            aws ecs describe-task-definition --task-definition TaskDef --query taskDefinition > task-definition.json


      - name: Render Amazon ECS task definition
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
              task-definition: task-definition.json
              container-name: laravel-app
              image: ${{ steps.build-image.outputs.image }}


      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
                task-definition: ${{ steps.render-web-container.outputs.task-definition }}
                service: ECS-Service 
                cluster: ECS-Cluster
                